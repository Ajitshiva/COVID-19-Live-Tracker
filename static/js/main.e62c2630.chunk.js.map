{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Charts/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","console","log","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e62c2630.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport { Styles } from '@material-ui/system';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nconst Cards = ( {data: { confirmed, recovered, deaths, lastUpdate}}) => {\n    if(!confirmed)\n    {\n        return 'Loading...';\n    }\n    if(!recovered)\n    {\n        return 'Loading...';\n    }\n    if(!deaths)\n    {\n        return 'Loading...';\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className = {cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start = {0} end = {confirmed.value} duration = {2.5} separator = \",\">\n                            </CountUp> \n                        </Typography>\n                        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()} </Typography>\n                        <Typography variant=\"body2\"> Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid item component={Card} xs={12} md={3} className = {cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start = {0} end = {recovered.value} duration = {2.5} separator = \",\">\n                            </CountUp> \n                        </Typography>\n                        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()} </Typography>\n                        <Typography variant=\"body2\"> Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className = {cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start = {0} end = {deaths.value} duration = {2.5} separator = \",\">\n                            </CountUp> \n                        </Typography>\n                        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()} </Typography>\n                        <Typography variant=\"body2\"> Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) =>\n{\n    let changeableUrl = url;\n    if(country)\n    {\n        changeableUrl = `${url}/countries/${country}`\n    }\n    try\n    {\n        const { data: { confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\n        \n        return {confirmed, recovered, deaths, lastUpdate };\n    }\n    catch (error)\n    {\n\n    } \n}\n\nexport const fetchDailyData = async () =>\n{\n    try\n    {\n        const {data} = await axios.get(`${url}/daily`);\n        \n        const modifiedData = \n        data.map((dailyData) =>\n                    (   {\n                        confirmed: dailyData.confirmed.total,\n                        deaths: dailyData.deaths.total,\n                        date: dailyData.reportDate,\n                        }\n                    )\n                );\n\n        return modifiedData;\n    }\n    catch ( error )\n    {\n\n    }\n}\n\nexport const fetchCountries = async() =>\n{\n    try{\n        \n        const { data: {countries}} = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name);        \n    }\n    catch(error)\n    {\n\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) =>\n{\n    const [dailyData, setDailyData] = useState([]);\n    useEffect(()=>\n    {\n        const fetchAPI = async () =>\n        {\n            setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n    },[]);\n\n    const lineChart = (\n        dailyData.length \n        ? (\n            <Line \n                data={{\n                        labels: dailyData.map(({ date }) => date),\n                        datasets: [{\n                            data: dailyData.map(({ confirmed }) => confirmed),\n                            label: 'Infected',\n                            borderColor : '#3333ff',\n                            fill: true, \n                        }, {\n                            data: dailyData.map(({ deaths }) => deaths),\n                            label: 'Deaths',\n                            borderColor : 'red',\n                            backgroundColor : 'rgba(255, 0, 0, 0.5)',\n                            fill: true, \n\n                        }],\n                }}\n            />\n        ) : null\n    );\n\n    const barChart = (\n        confirmed\n        ?(\n            <Bar\n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                        data: [confirmed.value, recovered.value, deaths.value]\n                    }],\n\n                }}\n                options = {{\n                    legend: {display:false},\n                    title: {display: true, text: `Current state in $(country)`},\n                }}\n            />\n            \n        ) : null\n    \n    )\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}    \n        </div>\n    )\n}\n\nexport default Chart;","import React, { useState, useEffect} from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\nconst CountryPicker = ({ handleCountryChange }) =>\n{\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n    useEffect(()=>\n    {\n        const fetchAPI = async () => \n        {\n            setFetchedCountries(await fetchCountries());\n        }\n        fetchAPI();\n    },[setFetchedCountries]);\n\n    console.log(fetchedCountries);\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue =\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key = {i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\nimport {Cards, Chart, CountryPicker, StatePicker} from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\nimport coronaImage from './images/image.png';\nclass App extends React.Component{\n    state = {\n        data: {},\n        country: '',\n    }\n    async componentDidMount()\n    {\n        const fetchedData = await fetchData();\n        this.setState({data: fetchedData});\n    }\n\n    handleCountryChange = async (country) =>\n    {\n        const fetchedData = await fetchData(country); \n        this.setState({data: fetchedData, country: country})\n    }\n    render()\n    {\n        const { data, country } = this.state;\n        \n        return(\n            <div className={styles.container}>\n                <img className = {styles.image} src = {coronaImage} alt = \"COVID_19\"/>\n                <Cards data = {data}/>\n                <CountryPicker handleCountryChange = {this.handleCountryChange} />\n                <Chart data = {data} country={country}/>\n                \n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__yjZZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}